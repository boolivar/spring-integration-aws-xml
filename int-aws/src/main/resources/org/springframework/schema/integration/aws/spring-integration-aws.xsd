<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
        xmlns:tool="http://www.springframework.org/schema/tool"
        xmlns:integration="http://www.springframework.org/schema/integration"
        xmlns:int-aws="http://www.springframework.org/schema/integration/aws"
        targetNamespace="http://www.springframework.org/schema/integration/aws"
        elementFormDefault="qualified">

    <import namespace="http://www.springframework.org/schema/tool"/>
    <import namespace="http://www.springframework.org/schema/integration"/>

    <annotation>
        <documentation><![CDATA[
            Defines the configuration elements for Spring Integration's AWS Adapters.
        ]]></documentation>
    </annotation>

    <element name="kcl-message-driven-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Configures an 'KclMessageDrivenChannelAdapter' endpoint
                receiving data from Amazon Kinesis streams using AWS KCL.
            ]]></documentation>
        </annotation>
        <complexType>
            <attributeGroup ref="int-aws:inboundChannelAdapterAttributes"/>
            <attribute name="streams" type="string" use="required">
                <annotation>
                    <documentation><![CDATA[
                        Comma-separated list of streams.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="kinesis-client" type="string">
                <annotation>
                    <documentation><![CDATA[
                        The 'software.amazon.awssdk.services.kinesis.KinesisAsyncClient' bean reference.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="software.amazon.awssdk.services.kinesis.KinesisAsyncClient"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="cloud-watch-client" type="string">
                <annotation>
                    <documentation><![CDATA[
                        The 'org.springframework.integration.aws.inbound.kinesis.CloudWatchAsyncClient' bean reference.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.integration.aws.inbound.kinesis.CloudWatchAsyncClient"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="dynamo-db-client" type="string">
                <annotation>
                    <documentation><![CDATA[
                        The 'org.springframework.integration.aws.inbound.kinesis.DynamoDbAsyncClient' bean reference.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.integration.aws.inbound.kinesis.DynamoDbAsyncClient"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="worker-id" type="string">
                <annotation>
                    <documentation><![CDATA[
                        Sets the worker identifier used to distinguish
                        different workers/processes of a Kinesis application.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="consumer-group" type="string">
                <annotation>
                    <documentation><![CDATA[
                        Name of the group this consumer belongs to.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="lease-table-name" type="string">
                <annotation>
                    <documentation><![CDATA[
                        Set a name of the DynamoDB table name for leases.
                        Defaults to 'consumerGroup'.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="consumer-backoff" type="int">
                <annotation>
                    <documentation><![CDATA[
                        Sleep timeout in milliseconds if consumer is throttled.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="empty-record-list" type="boolean">
                <annotation>
                    <documentation><![CDATA[
                        Whether to return an empty record list from consumer to the processor.
                        Works only in 'ListenerMode.batch' mode.
                        The message will be sent into the output channel with
                        an empty List as a payload.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="fan-out" type="boolean">
                <annotation>
                    <documentation><![CDATA[
                        Specify a retrieval strategy: fan-out (true; default) or polling (false).
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="bind-source-record" type="boolean">
                <annotation>
                    <documentation><![CDATA[
                        Bind the source consumer record in the header named
                        'IntegrationMessageHeaderAccessor.SOURCE_DATA'.
                        Does not apply to batch listeners.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="checkpoint-mode">
                <annotation>
                    <documentation><![CDATA[
                        Default is 'batch'.
                    ]]></documentation>
                </annotation>
                <simpleType>
                    <union memberTypes="int-aws:kinesisCheckpointMode string"/>
                </simpleType>
            </attribute>
            <attribute name="checkpoints-interval" type="long">
                <annotation>
                    <documentation><![CDATA[
                        Sets the interval between 2 checkpoints in milliseconds.
                        Only used when 'checkpoint-mode' is 'periodic'.
                        Default is 5s.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="listener-mode">
                <annotation>
                    <documentation><![CDATA[
                        Default is 'record'.
                    ]]></documentation>
                </annotation>
                <simpleType>
                    <union memberTypes="int-aws:kinesisListenerMode string"/>
                </simpleType>
            </attribute>
            <attribute name="metrics-level">
                <annotation>
                    <documentation><![CDATA[
                        Specify a metrics level to emit.
                        Defaults to 'MetricsLevel.DETAILED'.
                    ]]></documentation>
                </annotation>
                <simpleType>
                    <union memberTypes="int-aws:kinesisMetricsLevel string"/>
                </simpleType>
            </attribute>
            <attribute name="polling-idle-time" type="long">
                <annotation>
                    <documentation><![CDATA[
                        The idle timeout in milliseconds between
                        polls when using 'PollingConfig'.
                        Defaults to 1500ms.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="polling-max-records" type="int">
                <annotation>
                    <documentation><![CDATA[
                        The number of records to poll from Kinesis when using 'PollingConfig'.
                        Defaults to 10000.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="graceful-shutdown-timeout" type="long">
                <annotation>
                    <documentation><![CDATA[
                        The timeout for 'Scheduler.startGracefulShutdown()'.
                        Defaults to 0 with the meaning to call 'Scheduler.shutdown()'.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="glue-schema-registry-deserializer" type="string">
                <annotation>
                    <documentation><![CDATA[
                        'com.amazonaws.services.schemaregistry.deserializers.GlueSchemaRegistryDeserializer' bean.
                        If this instance is set, KCL will try to decode messages that might be
                        potentially encoded with Glue Schema Registry Serializer.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="com.amazonaws.services.schemaregistry.deserializers.GlueSchemaRegistryDeserializer"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="executor" type="string">
                <annotation>
                    <documentation><![CDATA[
                        Specify a 'org.springframework.core.task.TaskExecutor'
                        bean reference for consuming data from the stream.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.core.task.TaskExecutor"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="converter" type="string">
                <annotation>
                    <documentation><![CDATA[
                        Specify a 'org.springframework.core.convert.converter.Converter'
                        bean reference to deserialize the 'byte[]' from record's body.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.core.convert.converter.Converter"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="embedded-headers-mapper" type="string">
                <annotation>
                    <documentation><![CDATA[
                        Specify an 'org.springframework.integration.mapping.InboundMessageMapper'
                        bean reference to extract message headers embedded into the record data.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.integration.mapping.InboundMessageMapper"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="stream-initial-sequence" type="string">
                <annotation>
                    <documentation><![CDATA[
                        Specify an 'software.amazon.kinesis.common.InitialPositionInStreamExtended'
                        bean reference to specify initial position in the stream.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="software.amazon.kinesis.common.InitialPositionInStreamExtended"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
        </complexType>
    </element>
    
    <element name="kinesis-message-driven-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Configures an 'KinesisMessageDrivenChannelAdapter' endpoint
                receiving data from Amazon Kinesis streams.
            ]]></documentation>
        </annotation>
        <complexType>
            <attributeGroup ref="int-aws:inboundChannelAdapterAttributes"/>
            <attribute name="kinesis-client" type="string" use="required">
                <annotation>
                    <documentation><![CDATA[
                        The 'software.amazon.awssdk.services.kinesis.KinesisAsyncClient' bean reference.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="software.amazon.awssdk.services.kinesis.KinesisAsyncClient"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="streams" type="string" use="required">
                <annotation>
                    <documentation><![CDATA[
                        Comma-separated list of streams.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="consumer-group" type="string">
                <annotation>
                    <documentation><![CDATA[
                        Name of the group this consumer belongs to.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="bind-source-record" type="boolean">
                <annotation>
                    <documentation><![CDATA[
                        Bind the source consumer record in the header named
                        'IntegrationMessageHeaderAccessor.SOURCE_DATA'.
                        Does not apply to batch listeners.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="checkpoint-mode">
                <annotation>
                    <documentation><![CDATA[
                        Default is 'batch'.
                    ]]></documentation>
                </annotation>
                <simpleType>
                    <union memberTypes="int-aws:kinesisCheckpointMode string"/>
                </simpleType>
            </attribute>
            <attribute name="checkpoints-interval" type="long">
                <annotation>
                    <documentation><![CDATA[
                        Sets the interval between 2 checkpoints in milliseconds.
                        Only used when 'checkpoint-mode' is 'periodic'.
                        Default is 5s.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="lock-renewal-timeout" type="long">
                <annotation>
                    <documentation><![CDATA[
                        Configure a timeout in milliseconds
                        to wait for lock on shard renewal.
                        Default is 10s.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="concurrency" type="int">
                <annotation>
                    <documentation><![CDATA[
                        The maximum number of concurrent 'ConsumerInvoker's running.
                        The 'ShardConsumer' are evenly distributed between 'ConsumerInvoker's.
                        Messages from within the same shard will be processed sequentially.
                        In other words each shard is tied with the particular thread.
                        By default the concurrency is unlimited and shard is processed
                        in the 'consumerExecutor' directly.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="consumer-backoff" type="int">
                <annotation>
                    <documentation><![CDATA[
                        Sleep timeout in milliseconds if consumer is throttled.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="idle-between-polls" type="int">
                <annotation>
                    <documentation><![CDATA[
                        The sleep interval in milliseconds used in the
                        main loop between shards polling cycles.
                        Defaults to 1000. Minimum is 250.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="listener-mode">
                <annotation>
                    <documentation><![CDATA[
                        Default is 'record'.
                    ]]></documentation>
                </annotation>
                <simpleType>
                    <union memberTypes="int-aws:kinesisListenerMode string"/>
                </simpleType>
            </attribute>
            <attribute name="records-limit" type="int">
                <annotation>
                    <documentation><![CDATA[
                        The maximum record to poll per on get-records request.
                        Not greater then 10000.
                        Default is 10000.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="start-timeout" type="int">
                <annotation>
                    <documentation><![CDATA[
                        Max timeout in milliseconds to start.
                        Default is 60s.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="checkpoint-store" type="string">
                <annotation>
                    <documentation><![CDATA[
                        The 'org.springframework.integration.metadata.ConcurrentMetadataStore' bean reference.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.integration.metadata.ConcurrentMetadataStore"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="lock-registry" type="string">
                <annotation>
                    <documentation><![CDATA[
                        The 'org.springframework.integration.support.locks.LockRegistry'
                        bean reference for exclusive access to provided streams.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.integration.support.locks.LockRegistry"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
        </complexType>
    </element>

    <element name="kinesis-outbound-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Defines an outbound 'KinesisMessageHandler' adapter
                for sending data to Amazon Kinesis streams.
            ]]></documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="int-aws:kinesisOutboundChannelAdapter">
                    <attribute name="kinesis-client" type="string" use="required">
                        <annotation>
                            <documentation><![CDATA[
                                The 'software.amazon.awssdk.services.kinesis.KinesisAsyncClient' bean reference.
                            ]]></documentation>
                            <appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="software.amazon.awssdk.services.kinesis.KinesisAsyncClient"/>
                                </tool:annotation>
                            </appinfo>
                        </annotation>
                    </attribute>
                </extension>
            </complexContent>
        </complexType>
    </element>

    <element name="kpl-outbound-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Defines an outbound 'KplMessageHandler' adapter
                for sending data to Amazon Kinesis streams
                using Amazon Kinesis Producer Library.
            ]]></documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="int-aws:kinesisOutboundChannelAdapter">
                    <attribute name="kinesis-producer" type="string" use="required">
                        <annotation>
                            <documentation><![CDATA[
                                The 'org.springframework.integration.aws.outbound.KinesisProducer' bean reference.
                            ]]></documentation>
                            <appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.integration.aws.outbound.KinesisProducer"/>
                                </tool:annotation>
                            </appinfo>
                        </annotation>
                    </attribute>
                    <attribute name="flush-duration" type="long">
                        <annotation>
                            <documentation><![CDATA[
                                Rate in milliseconds how often to
                                call a 'KinesisProducer.flush()'.
                                Default is flush every record.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="glue-schema-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                SpEL expression for 'org.springframework.integration.aws.outbound.Schema'
                                to add into a 'UserRecord' built from the request message.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                </extension>
            </complexContent>
        </complexType>
    </element>

    <element name="s3-inbound-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Configures a 'SourcePollingChannelAdapter' Endpoint for the
                'org.springframework.integration.aws.inbound.S3InboundFileSynchronizingMessageSource' that
                synchronizes a local directory with the contents of a remote Amazon S3 bucket.
            ]]></documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="int-aws:s3InboundChannelAdapter">
                    <attribute name="local-directory" type="string" use="required">
                        <annotation>
                            <documentation><![CDATA[
                                Identifies the directory path (e.g.,
                                "/local/mytransfers") where files
                                will be transferred TO.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="temporary-file-suffix" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                Extension used when downloading files.
                                We change it right after we know it's downloaded.
                                Default ".writing".
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="local-filename-generator-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                Allows you to provide a SpEL expression to
                                generate the file name of
                                the local (transferred) file. The root
                                object of the SpEL
                                evaluation is the name of the original
                                file.
                                For example, a valid expression would be "#this.toUpperCase() +
                                '.a'" where #this represents the
                                original name of the remote
                                file.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="local-filter" type="string">
                        <annotation>
                            <appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.integration.file.filters.FileListFilter"/>
                                </tool:annotation>
                            </appinfo>
                            <documentation><![CDATA[
                                Allows you to specify a reference to a
                                [org.springframework.integration.file.filters.FileListFilter]
                                bean. It is used to determine which files will generate messages
                                after they have been synchronized. It will be combined with a filter that
                                will prevent accessing files that are in the process of being synchronized
                                (files having the 'temporary-file-suffix' suffix).
                                The default is an FileSystemPersistentAcceptOnceFileListFilter
                                which filters duplicate file names (processed during the current execution).
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="auto-create-local-directory" type="boolean">
                        <annotation>
                            <documentation><![CDATA[
                                Tells this adapter if the local directory must
                                be auto-created if it doesn't exist. Default is TRUE.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="delete-remote-files" type="boolean">
                        <annotation>
                            <documentation><![CDATA[
                                Specify whether to delete the remote source file after copying.
                                By default, the remote files will NOT be deleted.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="preserve-timestamp" type="boolean">
                        <annotation>
                            <documentation><![CDATA[
                                Specify whether to preserve the modified timestamp from the remote source
                                file on the local file after copying.
                                By default, the remote timestamp will NOT be preserved.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="remote-file-metadata-store" type="string">
                        <annotation>
                            <appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.integration.metadata.MetadataStore"/>
                                </tool:annotation>
                            </appinfo>
                            <documentation><![CDATA[
                                Reference to [org.springframework.integration.metadata.MetadataStore] bean
                                to hold a remote file info (host, port, remote directory)
                                for transfer downstream in message headers when local file is pulled.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="metadata-store-prefix" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                Specify a prefix for keys in metadata store
                                to not clash with other keys in the shared store.
                                By default bean name is used.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="scanner" type="string">
                        <annotation>
                            <appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.integration.file.DirectoryScanner"/>
                                </tool:annotation>
                            </appinfo>
                            <documentation><![CDATA[
                                Switch the local FileReadingMessageSource to use a custom
                                DirectoryScanner.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                </extension>
            </complexContent>
        </complexType>
    </element>

    <element name="s3-inbound-streaming-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Configures a 'SourcePollingChannelAdapter' Endpoint for the
                'org.springframework.integration.aws.inbound.S3StreamingMessageSource'.
            ]]></documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="int-aws:s3InboundChannelAdapter"/>
            </complexContent>
        </complexType>
    </element>

    <element name="s3-outbound-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Defines a Consumer Endpoint for the 'org.springframework.integration.aws.outbound.S3MessageHandler'
                with one-way behaviour to perform Amazon S3 operations .
            ]]></documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="int-aws:s3OutboundChannelAdapter">
                    <attributeGroup ref="integration:channelAdapterAttributes"/>
                </extension>
            </complexContent>
        </complexType>
    </element>

    <element name="s3-outbound-gateway">
        <annotation>
            <documentation><![CDATA[
                Defines a Consumer Endpoint for the 'org.springframework.integration.aws.outbound.S3MessageHandler'
                with request-reply behaviour to perform Amazon S3 operations.
            ]]></documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="int-aws:s3OutboundChannelAdapter">
                    <attributeGroup ref="integration:smartLifeCycleAttributeGroup"/>
                    <attribute name="id" type="string"/>
                    <attribute name="request-channel" type="string">
                        <annotation>
                            <appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.messaging.MessageChannel"/>
                                </tool:annotation>
                            </appinfo>
                            <documentation><![CDATA[
                                Identifies the request channel attached to this gateway.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="reply-channel" type="string">
                        <annotation>
                            <appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.messaging.MessageChannel"/>
                                </tool:annotation>
                            </appinfo>
                            <documentation><![CDATA[
                                Identifies the reply channel attached to this gateway.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="reply-timeout" type="long">
                        <annotation>
                            <documentation><![CDATA[
                                Allows you to specify how long this gateway will wait for
                                the reply message to be sent successfully to the reply channel
                                before throwing an exception. This attribute only applies when the
                                channel might block, for example when using a bounded queue channel that
                                is currently full.

                                Also, keep in mind that when sending to a DirectChannel, the
                                invocation will occur in the sender's thread. Therefore,
                                the failing of the send operation may be caused by other
                                components further downstream.

                                The "reply-timeout" attribute maps to the "sendTimeout" property of the
                                underlying 'MessagingTemplate' instance
                                (org.springframework.integration.core.MessagingTemplate).

                                The attribute will default, if not specified, to '-1', meaning that
                                by default, the Gateway will wait indefinitely. The value is
                                specified in milliseconds.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                </extension>
            </complexContent>
        </complexType>
    </element>

    <element name="sns-inbound-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Defines an SNS inbound HTTP-based Channel Adapter - SnsInboundChannelAdapter.
            ]]></documentation>
        </annotation>
        <complexType>
            <attributeGroup ref="int-aws:inboundChannelAdapterAttributes"/>
            <attribute name="sns" type="string" use="required">
                <annotation>
                    <documentation><![CDATA[
                        The 'software.amazon.awssdk.services.sns.SnsClient' bean reference.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="software.amazon.awssdk.services.sns.SnsClient"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="path" type="string" use="required">
                <annotation>
                    <documentation><![CDATA[
                        Comma-separated URI paths (e.g., /orderId/{order}).
                        Ant-style path patterns are also supported (e.g. /myPath/*.do).
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="payload-expression" type="string">
                <annotation>
                    <documentation><![CDATA[
                        Allows you to specify SpEL expression to construct a Message payload.
                        The root evaluation object will be populated with an HttpEntity instance as the root object
                        and it may contain variables:
                        - #pathVariables
                        - #requestParams
                        - #requestAttributes
                        - #requestHeaders
                        - #matrixVariables
                        - #cookies
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="handle-notification-status" type="boolean">
                <annotation>
                    <documentation><![CDATA[
                        Flag to indicate if the 'SubscriptionConfirmation' and 'UnsubscribeConfirmation'
                        SNS messages should sent to the 'channel' or not. If 'true' the
                        'AwsHeaders.NOTIFICATION_STATUS' message header is populated with the 'NotificationStatus'
                        value. In this case it is an application responsibility to 'confirm' subscription or not using
                        that 'NotificationStatus' object. Defaults to 'false'.
                    ]]></documentation>
                </annotation>
            </attribute>
        </complexType>
    </element>

    <element name="sns-outbound-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Defines an outbound SNS Channel Adapter for publishing messages to the topic.
            ]]></documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="int-aws:outboundChannelAdapter">
                    <attributeGroup ref="integration:channelAdapterAttributes"/>
                    <attribute name="sns" type="string" use="required">
                        <annotation>
                            <documentation><![CDATA[
                                The 'software.amazon.awssdk.services.sns.SnsClient' bean reference.
                            ]]></documentation>
                            <appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="software.amazon.awssdk.services.sns.SnsClient"/>
                                </tool:annotation>
                            </appinfo>
                        </annotation>
                    </attribute>
                    <attribute name="topic-arn" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                The Amazon SNS Topic ARN.
                                Mutually exclusive with 'topic-arn-expression'.
                                This attribute isn't mandatory and the topic can be specified on the
                                'PublishRequest' payload of the request Message.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="topic-arn-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                A SpEL expression that resolves to an Amazon SNS Topic ARN.
                                The 'requestMessage' is the root object for evaluation context.
                                Mutually exclusive with 'topic-arn'.
                                This attribute isn't mandatory and the topic can be specified on the
                                'PublishRequest' payload of the request Message.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="subject" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                The Notification Subject.
                                Mutually exclusive with 'subject-expression'.
                                This attribute isn't mandatory and the subject can be fully omitted.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="subject-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                The SpEL expression for Notification Subject.
                                The 'requestMessage' is the root object for evaluation context.
                                Mutually exclusive with 'subject-expression'.
                                This attribute isn't mandatory and the subject can be fully omitted.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="message-group-id" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                The message group ID.
                                Mutually exclusive with 'message-group-id-expression'.
                                SNS FIFO topics require a message group to be specified, either in
                                the adapter configuration or on a 'PublishRequest' payload
                                of the request Message.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="message-group-id-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                The SpEL expression for the message group ID.
                                Mutually exclusive with 'message-group-id'.
                                SNS FIFO topics require a message group to be specified, either in
                                the adapter configuration or on a 'PublishRequest' payload
                                of the request Message.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="message-deduplication-id-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                The SpEL expression for the message deduplication ID.
                                SNS FIFO topics require a message deduplication ID to be specified, either in
                                the adapter configuration or on a 'PublishRequest' payload
                                of the request Message, unless content-based deduplication is enabled
                                on the topic.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="body-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                The SpEL expression evaluating the 'message' object for
                                the 'PublishRequest'. The 'requestMessage' is the root object for evaluation context.
                                If it evaluates to 'SnsBodyBuilder' the 'messageStructure' of the 'PublishRequest is
                                set to json. Otherwise, the 'ConversionService' is used to convert the
                                evaluation result to the 'String' without setting the 'messageStructure'.
                                This attribute isn't mandatory and the 'payload' of request Message can be used directly.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                </extension>
            </complexContent>
        </complexType>
    </element>

    <element name="sqs-message-driven-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Configures an endpoint ('SqsMessageDrivenChannelAdapter') that will receive
                Amazon SQS message from the provided 'queues'.
            ]]></documentation>
        </annotation>
        <complexType>
            <attributeGroup ref="int-aws:inboundChannelAdapterAttributes"/>
            <attribute name="sqs" type="string" use="required">
                <annotation>
                    <documentation><![CDATA[
                        The 'software.amazon.awssdk.services.sqs.SqsAsyncClient' bean reference.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="software.amazon.awssdk.services.sqs.SqsAsyncClient"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="queues" type="string" use="required">
                <annotation>
                    <documentation><![CDATA[
                        Comma-separated SQS queue names or their URLs.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="components-task-executor" type="string">
                <annotation>
                    <documentation><![CDATA[
                        Set the TaskExecutor to be used by this container's components.
                        It's shared by the 'io.awspring.cloud.sqs.listener.sink.MessageSink'
                        and any blocking components the container might have.
                        Due to performance concerns, the provided executor MUST have a
                        'io.awspring.cloud.sqs.MessageExecutionThreadFactory'.
                        The container should have enough Threads to supportthe full load,
                        including if it's shared between containers.
                    ]]></documentation>
                    <appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.core.task.TaskExecutor"/>
                        </tool:annotation>
                    </appinfo>
                </annotation>
            </attribute>
            <attribute name="max-concurrent-messages" type="int">
                <annotation>
                    <documentation><![CDATA[
                        Set the maximum concurrent messages that can be
                        processed simultaneously for each queue. Default is 10.
                        Note that if acknowledgement batching is being used,
                        the actual maximum number of inflight messages might be higher.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="max-messages-per-poll" type="int">
                <annotation>
                    <documentation><![CDATA[
                        Set the number of messages that should be returned per poll.
                        If a value greater than 10 is provided, the result
                        of multiple polls will be combined, which can be useful for
                        'io.awspring.cloud.sqs.listener.ListenerMode#BATCH'. Default is 10.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="message-visibility" type="int">
                <annotation>
                    <documentation><![CDATA[
                        Configures the duration (in seconds) that the received messages are hidden from
                        subsequent poll requests after being retrieved from the system.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="listener-shutdown-timeout" type="int">
                <annotation>
                    <documentation><![CDATA[
                        Set the maximum amount of time that the container should
                        wait for tasks to finish before shutting down.
                        Default is 20 seconds.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="poll-timeout" type="int">
                <annotation>
                    <documentation><![CDATA[
                        The duration (in seconds) for which the call waits for
                        a message to arrive in the queue before returning.
                        If message is available, the call returns sooner than WaitTimeSeconds.
                        If no messages areavailable and the wait time expires,
                        the call does not return a message list. 
                        https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="max-delay-between-polls" type="int">
                <annotation>
                    <documentation><![CDATA[
                        Set the maximum time the polling thread should wait
                        for a full batch of permits to be available before trying to
                        acquire a partial batch if so configured.
                        A poll is only actually executed if at least one permit is available.
                        Default is 10 seconds.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="acknowledgement-mode">
                <annotation>
                    <documentation><![CDATA[
                        Container AcknowledgementMode.
                        Default is ON_SUCCESS.
                    ]]></documentation>
                </annotation>
                <simpleType>
                    <union memberTypes="int-aws:sqsAcknowledgementMode string"/>
                </simpleType>
            </attribute>
            <attribute name="acknowledgement-ordering">
                <annotation>
                    <documentation><![CDATA[
                        Container AcknowledgementOrdering.
                        Default is PARALLEL.
                    ]]></documentation>
                </annotation>
                <simpleType>
                    <union memberTypes="int-aws:sqsAcknowledgementOrdering string"/>
                </simpleType>
            </attribute>
            <attribute name="acknowledgement-interval" type="int">
                <annotation>
                    <documentation><![CDATA[
                        Set the maximum interval in milliseconds between acknowledgements
                        for batch acknowledgements. The default depends on the specific
                        'ContainerComponentFactory' implementation.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="acknowledgement-threshold" type="int">
                <annotation>
                    <documentation><![CDATA[
                        Set the threshold for triggering a batch acknowledgement.
                        The default depends on the specific 'ContainerComponentFactory'
                        implementation.
                    ]]></documentation>
                </annotation>
            </attribute>
            <attribute name="back-pressure-mode">
                <annotation>
                    <documentation><![CDATA[
                        Container BackPressureMode.
                        Default is AUTO.
                    ]]></documentation>
                </annotation>
                <simpleType>
                    <union memberTypes="int-aws:sqsBackPressureMode string"/>
                </simpleType>
            </attribute>
            <attribute name="queue-not-found-strategy">
                <annotation>
                    <documentation><![CDATA[
                        Container QueueNotFoundStrategy.
                        Default is CREATE.
                    ]]></documentation>
                </annotation>
                <simpleType>
                    <union memberTypes="int-aws:sqsQueueNotFoundStrategy string"/>
                </simpleType>
            </attribute>
        </complexType>
    </element>

    <element name="sqs-outbound-channel-adapter">
        <annotation>
            <documentation><![CDATA[
                Defines an outbound SQS Channel Adapter for sending messages to queues.
            ]]></documentation>
        </annotation>
        <complexType>
            <complexContent>
                <extension base="int-aws:outboundChannelAdapter">
                    <attributeGroup ref="integration:channelAdapterAttributes"/>
                    <attribute name="sqs" type="string" use="required">
                        <annotation>
                            <documentation><![CDATA[
                                The 'software.amazon.awssdk.services.sqs.SqsAsyncClient' bean reference.
                            ]]></documentation>
                            <appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="software.amazon.awssdk.services.sqs.SqsAsyncClient"/>
                                </tool:annotation>
                            </appinfo>
                        </annotation>
                    </attribute>
                    <attribute name="queue" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                The Amazon queue name or URL.
                                Mutually exclusive with 'queue-expression'.
                                This attribute isn't mandatory and the queue can be specified in message headers
                                with the 'AwsHeaders.QUEUE' header name.
                                Mutually exclusive with 'queue-expression'.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="queue-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                A SpEL expression that resolves to an Amazon queue or its URL.
                                The 'requestMessage' is the root object for evaluation context.
                                Mutually exclusive with 'queue'.
                                This attribute isn't mandatory and the queue can be specified in message headers with
                                the 'AwsHeaders.QUEUE' header name.
                                Mutually exclusive with 'queue'.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="delay" type="int">
                        <annotation>
                            <documentation><![CDATA[
                                The length of time, in seconds, for which to delay a specific message.
                                Valid values: 0 to 900. Maximum: 15 minutes.
                                Messages with a positive delay value become available for processing after the delay
                                period is finished.
                                If not specified, the default value for the queue applies.
                                Mutually exclusive with 'delay-expression'.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="delay-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                A SpEL expression that resolves to the length of time, in seconds,
                                for which to delay a specific message.
                                Mutually exclusive with 'delay'.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="message-group-id" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                This parameter applies only to FIFO (first-in-first-out) queues. 
                                The tag that specifies that a message belongs to a specific message group.
                                Messages that belong to the same message group are processed in a FIFO manner
                                (however, messages in different message groups might be processed out of order).
                                To interleave multiple ordered streams within a single queue, use 'MessageGroupId'
                                values (for example, session data for multiple users).
                                In this scenario, multiple readers can process the queue, but the session data
                                of each user is processed in a FIFO fashion.
                                Mutually exclusive with 'message-group-id-expression'.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="message-group-id-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                A SpEL expression that resolves a 'MessageGroupId' token at runtime.
                                Mutually exclusive with 'message-group-id'.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="message-deduplication-id" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                This parameter applies only to FIFO (first-in-first-out) queues. 
                                The token used for deduplication of sent messages.
                                If a message with a particular 'MessageDeduplicationId' is sent successfully,
                                any messages sent with the same 'MessageDeduplicationId' are accepted successfully
                                but aren't delivered during the 5-minute deduplication interval.
                                Mutually exclusive with 'message-deduplication-id-expression'.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="message-deduplication-id-expression" type="string">
                        <annotation>
                            <documentation><![CDATA[
                                A SpEL expression that resolves a 'MessageDeduplicationId' token at runtime.
                                Mutually exclusive with 'message-deduplication-id'.
                            ]]></documentation>
                        </annotation>
                    </attribute>
                    <attribute name="message-converter">
                        <annotation>
                            <documentation><![CDATA[
                                A bean reference to the MessageConverter.
                            ]]></documentation>
                            <appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type
                                            type="org.springframework.messaging.converter.MessageConverter"/>
                                </tool:annotation>
                            </appinfo>
                        </annotation>
                    </attribute>
                </extension>
            </complexContent>
        </complexType>
    </element>

    <complexType name="pollingInboundChannelAdapter">
        <all>
            <element ref="integration:poller" minOccurs="0"/>
        </all>
        <attributeGroup ref="integration:channelAdapterAttributes"/>
        <attribute name="send-timeout" type="long">
            <annotation>
                <documentation><![CDATA[
                    Timeout in milliseconds to wait for a Message to be sent to the
                    output channel.
                ]]></documentation>
            </annotation>
        </attribute>
    </complexType>

    <complexType name="outboundChannelAdapter">
        <sequence>
            <element ref="integration:poller" minOccurs="0" maxOccurs="1"/>
            <element name="request-handler-advice-chain" type="integration:handlerAdviceChainType" minOccurs="0" maxOccurs="1"/>
            <element name="transactional" type="integration:transactionalType" minOccurs="0" maxOccurs="1"/>
        </sequence>
        <attribute name="order">
            <annotation>
                <documentation><![CDATA[
                    Specifies the order for invocation when this endpoint is connected as a
                    subscriber to a SubscribableChannel.
                ]]></documentation>
            </annotation>
        </attribute>
        <attribute name="async" type="boolean">
            <annotation>
                <documentation><![CDATA[
                    Allow async replies. If the handler reply is a CompletableFuture Publisher,
                    send the output when it is satisfied rather than sending the future as the result.
                    Ignored for return types other than CompletableFuture or Publisher.
                    Default is false.
                ]]></documentation>
            </annotation>
        </attribute>
        <attribute name="output-channel" type="string">
            <annotation>
                <documentation><![CDATA[
                    Channel to reply if async is true.
                ]]></documentation>
            </annotation>
        </attribute>
        <attribute name="send-timeout" type="long">
            <annotation>
                <documentation><![CDATA[
                    Set the timeout for sending reply Messages.
                ]]></documentation>
            </annotation>
        </attribute>
    </complexType>

    <complexType name="s3InboundChannelAdapter">
        <complexContent>
            <extension base="int-aws:pollingInboundChannelAdapter">
                <attribute name="session-factory" type="string" use="required">
                    <annotation>
                        <appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type
                                        type="org.springframework.integration.file.remote.session.SessionFactory"/>
                            </tool:annotation>
                        </appinfo>
                        <documentation><![CDATA[
                            Reference to an [org.springframework.integration.file.remote.session.SessionFactory] bean with
                            a [software.amazon.awssdk.services.s3.model.S3Object] generic type parameter.
                            Mutually exclusive with 's3'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="remote-file-separator" type="string" default="/">
                    <annotation>
                        <documentation><![CDATA[
                            Allows you to provide remote file/directory
                            separator character. DEFAULT: '/'
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="remote-directory" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Identifies the remote directory path (e.g., "/remote/mytransfers")
                            Mutually exclusive with 'remote-directory-expression'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="remote-directory-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Specify a SpEL expression which will be used to evaluate the directory
                            path to where the files will be transferred
                            (e.g., "headers.['remote_dir'] + '/myTransfers'" for outbound endpoints)
                            There is no root object (message) for inbound endpoints
                            (e.g., "@someBean.fetchDirectory");
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="filename-pattern" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Allows you to provide a file name pattern to determine the file names that need to be scanned.
                            This is based on simple pattern matching (e.g., "*.txt, fo*.txt" etc.)
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="filename-regex" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Allows you to provide a Regular Expression to determine the file names that need to be scanned.
                            (e.g., "f[o]+\.txt" etc.)
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="filter" type="string">
                    <annotation>
                        <appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type type="org.springframework.integration.file.filters.FileListFilter"/>
                            </tool:annotation>
                        </appinfo>
                        <documentation><![CDATA[
                            Allows you to specify a reference to a
                            [org.springframework.integration.file.filters.FileListFilter]
                            bean. This filter is applied to files on the remote server and
                            only files that pass the filter are retrieved.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="filter-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Filter SpEL expression.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="comparator" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Specify a Comparator to be used when ordering Files. If none is provided, the
                            order in which files are processed is the order they are received from the S3 server.
                            The generic type of the Comparator is 'java.io.File'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="max-fetch-size" type="int">
                    <annotation>
                        <documentation><![CDATA[
                            Limit the number of files to fetch.
                        ]]></documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="s3OutboundChannelAdapter">
        <complexContent>
            <extension base="int-aws:outboundChannelAdapter">
                <attribute name="s3" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Reference to an instance of 'software.amazon.awssdk.services.s3.S3AsyncClient'.
                            Mutually exclusive with the 'transfer-manager'.
                        ]]></documentation>
                        <appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type type="software.amazon.awssdk.services.s3.S3AsyncClient"/>
                            </tool:annotation>
                        </appinfo>
                    </annotation>
                </attribute>
                <attribute name="transfer-manager" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Reference to an instance of 'software.amazon.awssdk.transfer.s3.S3TransferManager'.
                            Mutually exclusive with the 's3'.
                        ]]></documentation>
                        <appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type type="software.amazon.awssdk.transfer.s3.S3TransferManager"/>
                            </tool:annotation>
                        </appinfo>
                    </annotation>
                </attribute>
                <attribute name="bucket" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            The S3 bucket to use.
                            Mutually exclusive with 'bucket-expression'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="bucket-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            A SpEL expression to evaluate S3 bucket at runtime against request message.
                            Mutually exclusive with 'bucket'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="command">
                    <annotation>
                        <documentation><![CDATA[
                            The S3MessageHandler operation command.
                            Mutually exclusive with 'command-expression'.
                        ]]></documentation>
                    </annotation>
                    <simpleType>
                        <union memberTypes="int-aws:s3CommandType string"/>
                    </simpleType>
                </attribute>
                <attribute name="command-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            A SpEL expression to evaluate S3MessageHandler operation command at runtime against request message.
                            Mutually exclusive with 'command'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="key-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            A SpEL expression to evaluate S3Object key at runtime against request message.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="destination-bucket-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            A SpEL expression to evaluate destination S3 bucket at runtime against request message
                            for the 'copy' operation.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="destination-key-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            A SpEL expression to evaluate destination S3Object key at runtime against request message
                            for the 'copy' operation.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="upload-metadata-provider" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Reference to an instance of
                            'java.util.function.BiConsumer<PutObjectRequest.Builder, Message<?>>'.
                        ]]></documentation>
                        <appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type type="java.util.function.BiConsumer"/>
                            </tool:annotation>
                        </appinfo>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <attributeGroup name="inboundChannelAdapterAttributes">
        <attributeGroup ref="integration:channelAdapterAttributes"/>
        <attribute name="send-timeout" type="long">
            <annotation>
                <documentation><![CDATA[
                    Maximum amount of time in milliseconds to wait when sending a message
                    to the channel if such channel may block.
                    For example, a Queue Channel can block until space is available
                    if its maximum capacity has been reached.
                    May be overridden for individual messages.
                ]]></documentation>
            </annotation>
        </attribute>
        <attribute name="error-channel" type="string">
            <annotation>
                <documentation><![CDATA[
                    Message Channel to which error Messages should be sent.
                ]]></documentation>
                <appinfo>
                    <tool:annotation kind="ref">
                        <tool:expected-type type="org.springframework.messaging.MessageChannel"/>
                    </tool:annotation>
                </appinfo>
            </annotation>
        </attribute>
    </attributeGroup>

    <complexType name="kinesisOutboundChannelAdapter">
        <complexContent>
            <extension base="int-aws:outboundChannelAdapter">
                <attributeGroup ref="integration:channelAdapterAttributes"/>
                <attribute name="stream" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            The name of the stream to put the data record into.
                            Mutually exclusive with 'stream-expression'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="stream-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            The name of the stream to put the data record into.
                            Mutually exclusive with 'stream'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="partition-key" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Determines which shard in the stream the data record is assigned to.
                            Mutually exclusive with 'partition-key-expression'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="partition-key-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Determines which shard in the stream the data record is assigned to.
                            Mutually exclusive with 'partition-key'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="explicit-hash-key" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            The hash value used to explicitly determine the shard
                            the data record is assigned to by overriding the partition key hash.
                            Mutually exclusive with 'explicit-hash-key-expression'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="explicit-hash-key-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            The hash value used to explicitly determine the shard
                            the data record is assigned to by overriding the partition key hash.
                            Mutually exclusive with 'explicit-hash-key'.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="sequence-number-expression" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            Guarantees strictly increasing sequence numbers,
                            for puts from the same client and to the same partition key.
                            If this parameter is not set, records
                            are coarsely ordered based on arrival time.
                        ]]></documentation>
                    </annotation>
                </attribute>
                <attribute name="embedded-headers-mapper" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            'org.springframework.integration.mapping.OutboundMessageMapper<byte[]>' bean reference
                            for embedding message headers into the record data together with payload.
                        ]]></documentation>
                        <appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type type="org.springframework.integration.mapping.OutboundMessageMapper"/>
                            </tool:annotation>
                        </appinfo>
                    </annotation>
                </attribute>
                <attribute name="message-converter" type="string">
                    <annotation>
                        <documentation><![CDATA[
                            'org.springframework.messaging.converter.MessageConverter' bean reference
                            for converting payload to 'byte[]' for Kinesis record.
                        ]]></documentation>
                        <appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type type="org.springframework.messaging.converter.MessageConverter"/>
                            </tool:annotation>
                        </appinfo>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <simpleType name="kinesisCheckpointMode">
        <restriction base="token">
            <enumeration value="record"/>
            <enumeration value="batch"/>
            <enumeration value="manual"/>
            <enumeration value="periodic"/>
        </restriction>
    </simpleType>

    <simpleType name="kinesisListenerMode">
        <restriction base="token">
            <enumeration value="record"/>
            <enumeration value="batch"/>
        </restriction>
    </simpleType>

    <simpleType name="kinesisMetricsLevel">
        <restriction base="token">
            <enumeration value="NONE"/>
            <enumeration value="SUMMARY"/>
            <enumeration value="DETAILED"/>
        </restriction>
    </simpleType>

    <simpleType name="s3CommandType">
        <restriction base="token">
            <enumeration value="UPLOAD"/>
            <enumeration value="DOWNLOAD"/>
            <enumeration value="COPY"/>
        </restriction>
    </simpleType>

    <simpleType name="sqsAcknowledgementMode">
        <restriction base="token">
            <enumeration value="ON_SUCCESS"/>
            <enumeration value="ALWAYS"/>
            <enumeration value="MANUAL"/>
        </restriction>
    </simpleType>

    <simpleType name="sqsAcknowledgementOrdering">
        <restriction base="token">
            <enumeration value="ORDERED"/>
            <enumeration value="ORDERED_BY_GROUP"/>
            <enumeration value="PARALLEL"/>
        </restriction>
    </simpleType>

    <simpleType name="sqsBackPressureMode">
        <restriction base="token">
            <enumeration value="AUTO"/>
            <enumeration value="ALWAYS_POLL_MAX_MESSAGES"/>
            <enumeration value="FIXED_HIGH_THROUGHPUT"/>
        </restriction>
    </simpleType>

    <simpleType name="sqsQueueNotFoundStrategy">
        <restriction base="token">
            <enumeration value="FAIL"/>
            <enumeration value="CREATE"/>
        </restriction>
    </simpleType>
</schema>
