<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.springframework.org/schema/integration/aws"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:tool="http://www.springframework.org/schema/tool"
            xmlns:integration="http://www.springframework.org/schema/integration"
            targetNamespace="http://www.springframework.org/schema/integration/aws"
            elementFormDefault="qualified">

    <xsd:import namespace="http://www.springframework.org/schema/beans"
                schemaLocation="https://www.springframework.org/schema/beans/spring-beans-4.3.xsd"/>
    <xsd:import namespace="http://www.springframework.org/schema/tool"
                schemaLocation="https://www.springframework.org/schema/tool/spring-tool-4.3.xsd"/>
    <xsd:import namespace="http://www.springframework.org/schema/integration"
                schemaLocation="https://www.springframework.org/schema/integration/spring-integration-5.2.xsd"/>

    <xsd:annotation>
        <xsd:documentation><![CDATA[
            Defines the configuration elements for Spring Integration's AWS Adapters.
        ]]></xsd:documentation>
    </xsd:annotation>

    <xsd:element name="s3-inbound-channel-adapter">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Configures a 'SourcePollingChannelAdapter' Endpoint for the
                'org.springframework.integration.aws.inbound.S3InboundFileSynchronizingMessageSource' that
                synchronizes a local directory with the contents of a remote Amazon S3 bucket.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="s3InboundChannelAdapter">
                    <xsd:attribute name="local-directory" type="xsd:string" use="required">
                        <xsd:annotation>
                            <xsd:documentation><![CDATA[
                                Identifies the directory path (e.g.,
                                "/local/mytransfers") where files
                                will be transferred TO.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="temporary-file-suffix" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation><![CDATA[
                                Extension used when downloading files.
                                We change it right after we know it's downloaded.
                                Default ".writing".
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="local-filename-generator-expression" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation><![CDATA[
                                Allows you to provide a SpEL expression to
                                generate the file name of
                                the local (transferred) file. The root
                                object of the SpEL
                                evaluation is the name of the original
                                file.
                                For example, a valid expression would be "#this.toUpperCase() +
                                '.a'" where #this represents the
                                original name of the remote
                                file.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="local-filter" type="xsd:string">
                        <xsd:annotation>
                            <xsd:appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.integration.file.filters.FileListFilter"/>
                                </tool:annotation>
                            </xsd:appinfo>
                            <xsd:documentation><![CDATA[
                                Allows you to specify a reference to a
                                [org.springframework.integration.file.filters.FileListFilter]
                                bean. It is used to determine which files will generate messages
                                after they have been synchronized. It will be combined with a filter that
                                will prevent accessing files that are in the process of being synchronized
                                (files having the 'temporary-file-suffix' suffix).
                                The default is an FileSystemPersistentAcceptOnceFileListFilter
                                which filters duplicate file names (processed during the current execution).
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="auto-create-local-directory" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation><![CDATA[
                                Tells this adapter if the local directory must
                                be auto-created if it doesn't exist. Default is TRUE.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="delete-remote-files" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation><![CDATA[
                                Specify whether to delete the remote source file after copying.
                                By default, the remote files will NOT be deleted.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="preserve-timestamp" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation><![CDATA[
                                Specify whether to preserve the modified timestamp from the remote source
                                file on the local file after copying.
                                By default, the remote timestamp will NOT be preserved.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="remote-file-metadata-store" type="xsd:string">
                        <xsd:annotation>
                            <xsd:appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.integration.metadata.MetadataStore"/>
                                </tool:annotation>
                            </xsd:appinfo>
                            <xsd:documentation><![CDATA[
                                Reference to [org.springframework.integration.metadata.MetadataStore] bean
                                to hold a remote file info (host, port, remote directory)
                                for transfer downstream in message headers when local file is pulled.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="metadata-store-prefix" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation><![CDATA[
                                Specify a prefix for keys in metadata store
                                to not clash with other keys in the shared store.
                                By default bean name is used.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="scanner" type="xsd:string">
                        <xsd:annotation>
                            <xsd:appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.integration.file.DirectoryScanner"/>
                                </tool:annotation>
                            </xsd:appinfo>
                            <xsd:documentation><![CDATA[
                                Switch the local FileReadingMessageSource to use a custom
	                            DirectoryScanner.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="s3-inbound-streaming-channel-adapter">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Configures a 'SourcePollingChannelAdapter' Endpoint for the
                'org.springframework.integration.aws.inbound.S3StreamingMessageSource'.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="s3InboundChannelAdapter"/>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="s3-outbound-channel-adapter">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Defines a Consumer Endpoint for the 'org.springframework.integration.aws.outbound.S3MessageHandler'
                with one-way behaviour to perform Amazon S3 operations .
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="s3OutboundChannelAdapter">
                    <xsd:attributeGroup ref="integration:channelAdapterAttributes"/>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="s3-outbound-gateway">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Defines a Consumer Endpoint for the 'org.springframework.integration.aws.outbound.S3MessageHandler'
                with request-reply behaviour to perform Amazon S3 operations.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="s3OutboundChannelAdapter">
                    <xsd:attributeGroup ref="integration:smartLifeCycleAttributeGroup"/>
                    <xsd:attribute name="id" type="xsd:string"/>
                    <xsd:attribute name="request-channel" type="xsd:string">
                        <xsd:annotation>
                            <xsd:appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.messaging.MessageChannel"/>
                                </tool:annotation>
                            </xsd:appinfo>
                            <xsd:documentation><![CDATA[
                                Identifies the request channel attached to this gateway.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="reply-channel" type="xsd:string">
                        <xsd:annotation>
                            <xsd:appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type type="org.springframework.messaging.MessageChannel"/>
                                </tool:annotation>
                            </xsd:appinfo>
                            <xsd:documentation><![CDATA[
                                Identifies the reply channel attached to this gateway.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="reply-timeout" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation><![CDATA[
                                Allows you to specify how long this gateway will wait for
                                the reply message to be sent successfully to the reply channel
                                before throwing an exception. This attribute only applies when the
                                channel might block, for example when using a bounded queue channel that
                                is currently full.

                                Also, keep in mind that when sending to a DirectChannel, the
                                invocation will occur in the sender's thread. Therefore,
                                the failing of the send operation may be caused by other
                                components further downstream.

                                The "reply-timeout" attribute maps to the "sendTimeout" property of the
                                underlying 'MessagingTemplate' instance
                                (org.springframework.integration.core.MessagingTemplate).

                                The attribute will default, if not specified, to '-1', meaning that
                                by default, the Gateway will wait indefinitely. The value is
                                specified in milliseconds.
                            ]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="pollingInboundChannelAdapter">
        <xsd:all>
            <xsd:element ref="integration:poller" minOccurs="0"/>
        </xsd:all>
        <xsd:attributeGroup ref="integration:channelAdapterAttributes"/>
        <xsd:attribute name="send-timeout" type="xsd:long">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Timeout in milliseconds to wait for a Message to be sent to the
                    output channel.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="s3InboundChannelAdapter">
        <xsd:complexContent>
            <xsd:extension base="pollingInboundChannelAdapter">
                <xsd:attribute name="session-factory" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type
                                        type="org.springframework.integration.file.remote.session.SessionFactory"/>
                            </tool:annotation>
                        </xsd:appinfo>
                        <xsd:documentation><![CDATA[
                            Reference to an [org.springframework.integration.file.remote.session.SessionFactory] bean with
                            a [software.amazon.awssdk.services.s3.model.S3Object] generic type parameter.
                            Mutually exclusive with 's3'.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="remote-file-separator" type="xsd:string" default="/">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Allows you to provide remote file/directory
                            separator character. DEFAULT: '/'
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="remote-directory" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Identifies the remote directory path (e.g., "/remote/mytransfers")
                            Mutually exclusive with 'remote-directory-expression'.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="remote-directory-expression" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Specify a SpEL expression which will be used to evaluate the directory
                            path to where the files will be transferred
                            (e.g., "headers.['remote_dir'] + '/myTransfers'" for outbound endpoints)
                            There is no root object (message) for inbound endpoints
                            (e.g., "@someBean.fetchDirectory");
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="filename-pattern" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Allows you to provide a file name pattern to determine the file names that need to be scanned.
                            This is based on simple pattern matching (e.g., "*.txt, fo*.txt" etc.)
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="filename-regex" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Allows you to provide a Regular Expression to determine the file names that need to be scanned.
                            (e.g., "f[o]+\.txt" etc.)
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="filter" type="xsd:string">
                    <xsd:annotation>
                        <xsd:appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type type="org.springframework.integration.file.filters.FileListFilter"/>
                            </tool:annotation>
                        </xsd:appinfo>
                        <xsd:documentation><![CDATA[
                            Allows you to specify a reference to a
                            [org.springframework.integration.file.filters.FileListFilter]
                            bean. This filter is applied to files on the remote server and
                            only files that pass the filter are retrieved.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="filter-expression" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Filter SpEL expression.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="comparator" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Specify a Comparator to be used when ordering Files. If none is provided, the
                            order in which files are processed is the order they are received from the S3 server.
                            The generic type of the Comparator is 'java.io.File'.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="max-fetch-size" type="xsd:int">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Limit the number of files to fetch.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="outboundChannelAdapter">
        <xsd:sequence>
            <xsd:element ref="integration:poller" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="request-handler-advice-chain" type="integration:handlerAdviceChainType" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="transactional" type="integration:transactionalType" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
        <xsd:attribute name="order">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Specifies the order for invocation when this endpoint is connected as a
                    subscriber to a SubscribableChannel.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="s3OutboundChannelAdapter">
        <xsd:complexContent>
            <xsd:extension base="outboundChannelAdapter">
                <xsd:attribute name="s3" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Reference to an instance of 'software.amazon.awssdk.services.s3.S3AsyncClient'.
                            Mutually exclusive with the 'transfer-manager'.
                        ]]></xsd:documentation>
                        <xsd:appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type type="software.amazon.awssdk.services.s3.S3AsyncClient"/>
                            </tool:annotation>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="transfer-manager" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Reference to an instance of 'software.amazon.awssdk.transfer.s3.S3TransferManager'.
                            Mutually exclusive with the 's3'.
                        ]]></xsd:documentation>
                        <xsd:appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type type="software.amazon.awssdk.transfer.s3.S3TransferManager"/>
                            </tool:annotation>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="bucket" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            The S3 bucket to use.
                            Mutually exclusive with 'bucket-expression'.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="bucket-expression" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            A SpEL expression to evaluate S3 bucket at runtime against request message.
                            Mutually exclusive with 'bucket'.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="command">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            The S3MessageHandler operation command.
                            Mutually exclusive with 'command-expression'.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                        <xsd:union memberTypes="s3CommandType xsd:string"/>
                    </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute name="command-expression" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            A SpEL expression to evaluate S3MessageHandler operation command at runtime against request message.
                            Mutually exclusive with 'command'.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="key-expression" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            A SpEL expression to evaluate S3Object key at runtime against request message.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="destination-bucket-expression" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            A SpEL expression to evaluate destination S3 bucket at runtime against request message
                            for the 'copy' operation.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="destination-key-expression" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            A SpEL expression to evaluate destination S3Object key at runtime against request message
                            for the 'copy' operation.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="upload-metadata-provider" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Reference to an instance of
                            'java.util.function.BiConsumer<PutObjectRequest.Builder, Message<?>>'.
                        ]]></xsd:documentation>
                        <xsd:appinfo>
                            <tool:annotation kind="ref">
                                <tool:expected-type type="java.util.function.BiConsumer"/>
                            </tool:annotation>
                        </xsd:appinfo>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType name="s3CommandType">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="UPLOAD"/>
            <xsd:enumeration value="DOWNLOAD"/>
            <xsd:enumeration value="COPY"/>
        </xsd:restriction>
    </xsd:simpleType>
</xsd:schema>
